// File: Mux8Way16.hdl
// Author: Joseph Shumway
// Date: 9/14/2021
// Section: 504
// E-mail: joseph.shumway@tamu.edu 
// Description: implements the following logic as a circuit: 8 way 16 Multiplexor
// --------------------------------------------------------------

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // reverse of Dmux 8 way



    // from Dmux8way file:
    // group x -> (u or v)
    //      group u -> (a or b)
    //      group v -> (c or d)
    

    // group y -> (i or j)
    //      group i -> (e or f)
    //      group j -> (g or h)



    // make u from a or b using sel[0]
    Mux16(a=a, b=b, sel=sel[0], out=u);
    
    // make v from c or d using sel[0]
    Mux16(a=c, b=d, sel=sel[0], out=v);

    // make i from e or f using sel[0]
    Mux16(a=e, b=f, sel=sel[0], out=i);

    // make j from g or h using sel[0]
    Mux16(a=g, b=h, sel=sel[0], out=j);



    // make x from u or v using sel[1]
    Mux16(a=u, b=v, sel=sel[1], out=x);

    // make y from i or j using sel[1]
    Mux16(a=i, b=j, sel=sel[1], out=y);



    // make out from x or y using sel[2]
    Mux16(a=x, b=y, sel=sel[2], out=out);
    
}