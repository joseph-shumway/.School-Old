// File: DMux4Way.hdl
// Author: Joseph Shumway
// Date: 9/14/2021
// Section: 504
// E-mail: joseph.shumway@tamu.edu 
// Description: implements the following logic as a circuit: 4 way Demultiplexor
// --------------------------------------------------------------

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // Put your code here:

    // same as Mux4Way16, but in reverse

    // check input and split. 
    // If first digit is 0, a1 = use (we will use input a or b later),
    // If first digit is 1, b1 = use (we will use input c or d later).
    DMux(in=in, sel=sel[1], a=a1, b=b1);

    // check input and split. If second digit is 0, a = use, else, b = use.
    DMux(in=a1, sel=sel[0], a=a, b=b);
    
    // check input and split. If second digit is 0, c = use, else, d = use.
    DMux(in=b1, sel=sel[0], a=c, b=d);
    


}