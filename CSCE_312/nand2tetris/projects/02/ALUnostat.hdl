// File: ALUnostat
// Author: Joseph SHumway
// Date: 9/20/2021
// Section: 504
// E-mail: joseph.shumway@tamu.edu 
// Description:
// implements the ALU chip without the two additional outputs

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/ALU-nostat.hdl

/**
 * The ALU (Arithmetic Logic Unit).
 * Computes one of the following functions:
 * x+y, x-y, y-x, 0, 1, -1, x, y, -x, -y, !x, !y,
 * x+1, y+1, x-1, y-1, x&y, x|y on two 16-bit inputs, 
 * according to 6 input bits denoted zx,nx,zy,ny,f,no.
 */

// Implementation: the ALU logic manipulates the x and y inputs
// and operates on the resulting values, as follows:
// if (zx == 1) set x = 0        // 16-bit constant
// if (nx == 1) set x = !x       // bitwise not
// if (zy == 1) set y = 0        // 16-bit constant
// if (ny == 1) set y = !y       // bitwise not
// if (f == 1)  set out = x + y  // integer 2's complement addition
// if (f == 0)  set out = x & y  // bitwise and
// if (no == 1) set out = !out   // bitwise not

CHIP ALUnostat {
    IN  
        x[16], y[16],  // 16-bit inputs        
        zx, // zero the x input?
        nx, // negate the x input?
        zy, // zero the y input?
        ny, // negate the y input?
        f,  // compute out = x + y (if 1) or x & y (if 0)
        no; // negate the out output?

    OUT 
        out[16]; // 16-bit output

    PARTS:
    // Put you code here:
    
    // zero x
    Mux16(a=x, b=false, sel=zx, out=x1);

    // negate x
    Not16(in=x1, out=notX);
    Mux16(a=x1, b=notX, sel=nx, out=x2);

    // zero y
    Mux16(a=y, b=false, sel=zy, out=y1);

    // negate y
    Not16(in=y1, out=notY);
    Mux16(a=y1, b=notY, sel=ny, out=y2);

    // compute sum of x and y
    Add16(a=x2, b=y2, out=sum1);
    
    // compute x and y
    And16(a=x2, b=y2, out=XandY);
    
    // select sum or and for x and y
    Mux16(a=XandY, b=sum1, sel=f, out=result1);
    
    // negation of result
    Not16(in=result1, out=negResult1);
    
    // Final selection
    Mux16(a=result1, b=negResult1, sel=no, out=out);
    


}